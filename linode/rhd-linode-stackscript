#!/bin/bash
# <UDF name="hostname" label="Hostname" />
# <UDF name="userpassword" label="User password" />
# <UDF name="sharedenv" label="Shared environment?" oneOf="Yes,No" default="No" />
# <UDF name="db_password" Label="MySQL root Password" />
# <UDF name="db_name" Label="Create Database" default="" example="Optionally create this database" />
# <UDF name="db_user" Label="Create MySQL User" default="" example="Optionally create this user" />
# <UDF name="db_user_password" Label="Create MySQL User Password" default="" example="User's password" />
# <UDF name="domain" Label="Site Domain" example="Example: domain.com" default="" />
# <UDF name="php_ver" Label="PHP Version" oneOf="7.0,7.1,7.2" default="7.2" />
# <UDF name="migration" Label="Migrating from another Linode?" oneOf="Yes,No" default="No" />

# Custom bash helpers
source <ssinclude StackScriptID="353420">

USERHOME=/home/gaswirth

function rhd_initial_setup {
	export DEBIAN_FRONTEND=noninteractive
	
	# Essential installs
	apt update -y
	apt install -y postfix git ufw mailutils screen software-properties-common wget letsencrypt less man-db clamav clamav-daemon sasl2-bin python-pip
	apt upgrade -y
	apt -o Dpkg::Options::="--force-confold" -o Dpkg::Options::="--force-confdef" dist-upgrade -y 
	
	# Ondrej PHP repo
	add-apt-repository ppa:ondrej/php -y
	apt update -y
	
	# Git setup
	git config --global user.email "nick@roundhouse-designs.com"
	git config --global user.name "Nick Gaswirth"
	git config --global push.default simple
	
	# NPM
	curl -sL https://deb.nodesource.com/setup_8.x | sudo bash -
	apt install nodejs -y
	npm install -g grunt-cli
	
	# Services
	echo "postfix postfix/main_mailer_type select Internet Site" | debconf-set-selections
	echo "postfix postfix/mailname string $FQDN" | debconf-set-selections
	
	# Firewall
	ufw default deny incoming
	ufw default allow outgoing
	ufw allow ssh
	ufw allow http
	ufw allow https
	ufw enable
}


function rhd_users_setup {
	# Users
	# Set up gaswirth and foy users
	apt install -y sudo
	adduser gaswirth --disabled-password --gecos ""
	echo -e "$USERPASSWORD\n$USERPASSWORD" | passwd gaswirth
	usermod -aG sudo gaswirth
	
	adduser foy --disabled-password --gecos ""
	useradd foy
	echo foy:"$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 12 | head -n 1)" | chpasswd
	usermod -aG sudo foy
	
	# Install user pubkeys
	# Generate SSH keys for gaswirth
	mkdir {"$USERHOME"/.ssh,/home/foy/.ssh}
	touch {"$USERHOME"/.ssh/authorized_keys,/home/foy/.ssh/authorized_keys}
	chmod 700 "$USERHOME"/.ssh /home/foy/.ssh
	chmod 600 "$USERHOME"/.ssh/authorized_keys /home/foy/.ssh/authorized_keys
	chown -R gaswirth:gaswirth "$USERHOME"/.ssh
	chown -R foy:foy /home/foy/.ssh
	sudo -u gaswirth ssh-keygen -f "$USERHOME"/.ssh/id_rsa -N ''
	
	#gaswirth
	echo "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC79KWiV0WjBJV8c6AgJnonh12jlVr//3e23of+ADCfgNMasIB8UT9H+xM1zeBh8GmzsrrI4FfiGhhvawa6gyFgbJsSReKWJbsoqFYzUYTDulECsO/iTO438lYIdu4Jsobm+1UsNOX6p3u2zXCrfj1ItLUSGT/dFwTizZIXmktrrg8icW3uFcPieVUqC1qVGsznIgYPDUhPIDLeEELzU87fOfy49YuTZ/M10a4Y8zIv9klzno27RZm90OTA4eqZ1VA+7soWo3TREzhY3X/ZQHC2kdhaseAgUdPfm1hxFg7Cc+Czs6+lAwcA1WhPMAdBKteq5ovbAvphOpQIuVVPkQ+1 gaswirth@Frankengassy.local" >> "$USERHOME"/.ssh/authorized_keys
	echo "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDbTWzq9yXe8A52N/HzINynxX+miY1zLoh2yTKXxzaJ/OdZGcpMFXWTdy8X+RHtOBIzrOD8oNeQGnEZVzKOYnJQBM1UhUztuJkjn2BM5KCh4LhKOhdn6XjrF8WfKN3P/rcjG0E9IREMKDvtQvdFIqaC2FNkKnVDtan5l3ga1493pckImDO1+E+qwfc3n/XsXj9kHXJ4di9CQ7Y8FI/ODvRq2m+/cZea9RZqHSPYjzhoH2/ol9w5ihLYb9L6sEEaGHn/Xr03bS5paAGV6QG4l2+4UuefLfrgUv4oYx1VVHwejrg26ickU9tuOFCvrOq4eQq4VTCkmEzYtFf/TdhCg33/ gaswirth@Gassybook.local" >> "$USERHOME"/.ssh/authorized_keys
	
	#foy
	echo "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDTvprX8q2H13YwUtbtaIiBk6MT8is8cb4IJJitZQ3DrQ4IpmLulepxKFPdAqzUE2wxCfU8xmXzC2uIq/VGp02dbVOzT2bHyi9XAJTGX4s7hsVyACPXeSHW30dpdHYrLPbEBLx9TY7ODg/sZ/wLb7OAACglLHlxn7/KkRfWyS2XpCWjCzpLK2koC2NpvAFqyue18cBZ37Jm/fIArPiiYxV3JCzAfkStAf14iv4UjRZ0UyJqN2XCYML+Lplo2ltvSffRYTuFxrzszJNkfLuKVx5Gagx7V4P/+GYKpBLAmHpIKTQjEoIqxcA7kNfGOBIAWK21z9ZzlRQGnhO6kqXOPhur foy@Ryan-Foys-Macbook-Pro-2.local" > /home/foy/.ssh/authorized_keys
	echo "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDnr84P+XxFziw1jz+UrJjxIp+1ORttNkJxUtmnsBIhyMJkub7OZwCfHsZzjp1rIsTx8lP0TPIR7yl77QZ0e/O9v6Jtc/De2UkI0vaoahjSmt6MEfezVuz+V0zh0VLBZ2GKzBEU2sNW8KqkVvgyeIASDLFMd57jJDk0UxPsTaShIbYDvzPrXId44z9J6r3BrmzFVFrt3CmF1LBaxNasyOXN46MURzQ/EPWAO8r99yvHrsNGmOGrC5HFdS5FXP2fgFttj9laERieQ4UAj5jSGyl7+mEtLaPP2tGDpHTsRCjMHM6O9JV62d8kuf9MPGnKuDQM+4Ifo3zlUv/9hCvFT9Y1 foy@Ryan-Foys-iMac.local" >> /home/foy/.ssh/authorized_keys
	
	# Kill SSH root login
	sshDisableRoot
}


function rhd_user_scripts {
	# Create ~/scripts directory
	if [ ! -d "$USERHOME"/scripts ]; then
		mkdir "$USERHOME"/scripts
	fi
	
	# Install mysqltuner.pl
	wget http://mysqltuner.pl/ -O "$USERHOME"/scripts/mysqltuner/mysqltuner.pl
	wget https://raw.githubusercontent.com/major/MySQLTuner-perl/master/basic_passwords.txt -O "$USERHOME"/scripts/mysqltuner/basic_passwords.txt
	wget https://raw.githubusercontent.com/major/MySQLTuner-perl/master/vulnerabilities.csv -O "$USERHOME"/scripts/mysqltuner/vulnerabilities.csv
	chmod +x "$USERHOME"/scripts/mysqltuner/mysqltuner.pl
	
	# Post setup operations
	cd /home/gaswirth || exit
	wget https://raw.githubusercontent.com/gaswirth/rhdwp-scripts/forked-repos/runme.sh
	chmod +x runme.sh
}


function rhd_cron_setup {
	# Update
	git clone https://github.com/gaswirth/rhdwp-wp_helper.git /usr/local/bin/rhd_wp_helper
	chown -R www-data:www-data /usr/local/bin/rhd_wp_helper
	chmod 774 /usr/local/bin/rhd_wp_helper/*.sh
	
	if [ "$SHAREDENV" = "Yes" ]; then
		HELPER="run_wp_helper.sh"
		LOGFILES="/var/www/public_html/*/log/*.log"
	else
		HELPER="wp_helper.sh --update=all"
		LOGFILES="/var/www/log/*.log"
	fi
	
	## Backups
	pip install --upgrade b2
	
	# Install Restic (backups)
	cd /tmp || exit
	wget https://github.com/restic/restic/releases/download/v0.9.0/restic_0.9.0_linux_amd64.bz2
	bunzip2 restic_0.9.0_linux_amd64.bz2
	mv restic_0.9.0_linux_amd64 /usr/local/bin/restic
	chmod 700 /usr/local/bin/restic
	chown gaswirth:gaswirth /usr/local/bin/restic
	
	# mysqldump passwordless for gaswirth and root (for restic backup script)
	cat > /home/gaswirth/.my.cnf <<- EOF
		[mysqldump]
		user=root
		password="$DB_PASSWORD"
	EOF
	chown gaswirth:gaswirth "$USERHOME"/.my.cnf
	chmod 600 "$USERHOME"/.my.cnf
	cp "$USERHOME"/.my.cnf /root/.my.cnf
	chown root:root /root/.my.cnf
	
	# logrotate
	cat > /etc/cron.weekly/logrotate <<- EOF
		#!/bin/sh                                                                                                                                                                                          
		logrotate /etc/logrotate.conf
	EOF
	cat > /etc/logrotate.d/public_html <<- EOF
		$LOGFILES {
		  weekly
		  rotate 3
		  compress
		  missingok
		  extension log
		  create 644 www-data www-data
		}
	EOF
	chown root:root /etc/logrotate.d/public_html
	chown root:root /etc/cron.weekly/logrotate
	chmod 644 /etc/logrotate.d/public_html
	chmod 655 /etc/cron.weekly/logrotate
	
	# Other cron jobs
	# root
	cat > /var/spool/cron/crontabs/root <<- EOF
		0 0 1,15 * * letsencrypt renew --agree-tos --m admin@roundhouse-designs.com
		0 */6 * * * bash "$USERHOME"/scripts/restic-backup.sh >/dev/null 2>&1
	EOF
	
	# www-data
	cat > /var/spool/cron/crontabs/www-data <<- EOF
		0 0 * * * /usr/local/bin/rhd_wp_helper/$HELPER
	EOF
	
	rhd_user_scripts
}


function rhd_environment_setup {
	# Apache2
	apt install -y apache2
	a2dissite 000-default.conf
	apache_tune 40
	mkdir /var/www/{public,log}
	rm -rf /var/www/html
	usermod -aG www-data gaswirth
	
	# PHP
	apt update
	
	apt install -y php"${PHP_VER}" libapache2-mod-php"${PHP_VER}" php"${PHP_VER}"-mysql php"${PHP_VER}"-json php"${PHP_VER}"-mbstring php"${PHP_VER}"-xml php"${PHP_VER}"-xmlrpc php"${PHP_VER}"-curl php"${PHP_VER}"-gd php"${PHP_VER}"-imagick
	
	if (( $(echo "$PHP_VER > 7.1" | bc -l) )); then	
		apt install -y php"${PHP_VER}"-mcrypt
	fi
	
	# AllowOverride All
	sed -i.bak '/<Directory \/var\/www\/>/,/<\/Directory>/ s/AllowOverride None/AllowOverride All/' /etc/apache2/apache2.conf
	
	if [ "$SHAREDENV" != "Yes" ]; then
		sed -i.orig 's/post_max_size = [0-9]*M/post_max_size = 20M/' /etc/php/"$PHP_VER"/apache2/php.ini
		sed -i.orig 's/upload_max_filesize = [0-9]*M/upload_max_filesize = 20M/' /etc/php/"$PHP_VER"/apache2/php.ini
	fi
	
	# MySQL
	if [ -n "$DB_PASSWORD" ]; then
		mysql_install "$DB_PASSWORD" && mysql_tune 40
		
		if [ -n "$DB_USER" ] || [ -n "$DB_USER_PASSWORD" ]; then
			mysql_create_database "$DB_PASSWORD" "$DB_NAME"
			mysql_create_user "$DB_PASSWORD" "$DB_USER" "$DB_USER_PASSWORD"
			mysql_grant_user "$DB_PASSWORD" "$DB_USER" "$DB_NAME"
		fi
	fi
	
	# MySQL customizations
	cp /etc/mysql/mysql.conf.d/mysqld.cnf /etc/mysql/mysql.conf.d/mysqld.cnf.bak
	sed -i -e 's/query_cache_limit/#query_cache_limit/' /etc/mysql/mysql.conf.d/mysqld.cnf
	sed -i -e 's/query_cache_size/#query_cache_size/' /etc/mysql/mysql.conf.d/mysqld.cnf
	
	cat >> /etc/mysql/mysql.conf.d/mysqld.cnf <<- EOF
		# Skip reverse DNS lookup of clients
		skip-name-resolve
		
		query_cache_size = 0
		query_cache_type = 0
		query_cache_limit = 16M
		join_buffer_size = 512K
		tmp_table_size = 32M
		max_heap_table_size = 32M
		innodb_log_file_size = 16M
	EOF
	
	# WP-CLI
	curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
	chmod 774 wp-cli.phar
	chown www-data:www-data wp-cli.phar
	mv wp-cli.phar /usr/local/bin/wp
}


function rhd_vhost_setup {
	if [ -n "$DOMAIN" ]; then
	
		#VirtualHost
		if [ -e "/etc/apache2/sites-available/""$DOMAIN"".conf" ]; then
			echo "/etc/apache2/sites-available/""$DOMAIN"".conf already exists"
		else
			cat > "/etc/apache2/sites-available/$DOMAIN.conf" <<- EOF			
				# domain: $DOMAIN
				# public: /var/www/public/
				
				<VirtualHost *:80>
				  ServerName $HOSTNAME
				  ServerAlias www.$HOSTNAME
				  DirectoryIndex index.html index.php
				  DocumentRoot /var/www/public
				  LogLevel warn
				  ErrorLog /var/www/log/error.log
				  CustomLog /var/www/log/access.log combined
				</VirtualHost>
				
				<VirtualHost *:443>
				  ServerName $HOSTNAME
				  ServerAlias www.$HOSTNAME
				  DirectoryIndex index.html index.php
				  DocumentRoot /var/www/public
				  LogLevel warn
				  ErrorLog /var/www/log/error.log
				  CustomLog /var/www/log/acess.log combined
				
				  # SSLEngine On
				  # SSLCertificateFile /etc/letsencrypt/live/$HOSTNAME/fullchain.pem
				  # SSLCertificateKeyFile /etc/letsencrypt/live/$HOSTNAME/privkey.pem
				</VirtualHost>
			EOF
		fi
		a2ensite "$DOMAIN".conf
	
	fi
}


function rhd_goodstuff {
	# apt cleanup
	apt autoclean -y
	apt autoremove -y

	# iTerm Shell Integration (macOS)
	curl -L https://iterm2.com/shell_integration/install_shell_integration_and_utilities.sh | bash
	
	# Enable the colorful root bash prompt
	sed -i -e 's/^#PS1=/PS1=/' /root/.bashrc # enable the colorful root bash prompt
	
	# Ensure proper permissions, just in case I fucked something up...
	chown gaswirth:gaswirth "$USERHOME"
	chown foy:foy /home/foy
	
	# Restart services
	systemctl restart apache2 

	# Nick's Aliases
	cat > "$USERHOME"/.bash_aliases <<- EOF				
		alias a2restart='sudo systemctl restart apache2.service'
		alias a2reload='sudo systemctl reload apache2.service'
		alias update='sudo apt update && sudo apt upgrade --show-upgraded --assume-yes'
		alias perms='sudo chown -R www-data:www-data . && sudo chmod -R 664 * && sudo find . -type d -exec sudo chmod 775 {} \;'
		alias a2buddy='curl -sL https://raw.githubusercontent.com/richardforth/apache2buddy/master/apache2buddy.pl | sudo perl'
	EOF

	# `rhd` shared/private setup
	if [ "$SHAREDENV" = "Yes" ]; then
		echo "alias rhd='cd /var/www/public_html'" >> "$USERHOME"/.bash_aliases
	else
		echo "alias rhd='cd /var/www/public'" >> "$USERHOME"/.bash_aliases
	fi

	chown gaswirth:gaswirth .bash_aliases
	chown gaswirth:gaswirth scripts
	
	# restarts services that have a file in /tmp/needs-restart/
	restartServices
	
	if [ "$MIGRATION" = "Yes" ]; then
		rhd_prep_migration
	fi;
	
	echo "********** HUZZAH!!! **********"
}


function rhd_prep_migration {
	chown -R gaswirth:www-data /var/www
	rmdir /var/www/public
	rmdir /var/www/public_html
	rm /etc/apache2/sites-available/*
	mv /etc/apache2/mods-available/mpm_prefork.conf /etc/apache2/mods-available/mpm_prefork.conf.orig
	cp /etc/hosts /etc/hosts.orig
}


##################
# Start
##################
IP=$(systemPrimaryIPV4)
IPV6=$(systemPrimaryIPV6)
FQDN="$HOSTNAME.roundhouse-designs.com"

# System setup
hostnamectl set-hostname "$HOSTNAME"
echo "$IP	$FQDN	$HOSTNAME" >> /etc/hosts
echo "$IPV6	$FQDN	$HOSTNAME" >> /etc/hosts

# Roll it out
rhd_initial_setup
rhd_users_setup
rhd_environment_setup
rhd_cron_setup
rhd_vhost_setup
rhd_goodstuff