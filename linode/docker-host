#!/bin/bash
# <UDF name="hostname" label="Hostname" />
# <UDF name="userpassword" label="User password" />
# STACKSCRIPT_ID: 387061

# Vars
USERHOME=/home/gaswirth

function rhd_initial_setup {
	export DEBIAN_FRONTEND=noninteractive
	
	# Docker GPG key
	curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
	sudo add-apt-repository \
		"deb [arch=amd64] https://download.docker.com/linux/ubuntu \
		$(lsb_release -cs) \
		stable"
	
	# Update and install
	apt update -y
	apt install -y \
		postfix \
		git \
		ufw \
		screen \
		software-properties-common \
		wget \
		less \
		man-db \
		clamav \
		clamav-daemon \
		sasl2-bin \
		python-pip \
		apt-transport-https \
		ca-certificates \
		curl \
		gnupg-agent \
		docker-ce

	apt upgrade -y
	apt -o Dpkg::Options::="--force-confold" -o Dpkg::Options::="--force-confdef" dist-upgrade -y 
	
	# Docker Compose
	sudo curl -L "https://github.com/docker/compose/releases/download/1.23.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
	sudo chmod +x /usr/local/bin/docker-compose
	
	# Git setup
	git config --global user.email "nick@roundhouse-designs.com"
	git config --global user.name "Nick Gaswirth"
	git config --global push.default simple
	
	# Firewall
	ufw default deny incoming
	ufw default allow outgoing
	ufw allow ssh
	ufw allow http
	ufw allow https
	
	# Services
	echo "postfix postfix/main_mailer_type select Internet Site" | debconf-set-selections
	echo "postfix postfix/mailname string ${FQDN}" | debconf-set-selections
}


function rhd_users_setup {
	# Users
	# Set up gaswirth and foy users
	apt install -y sudo
	adduser gaswirth --disabled-password --gecos ""
	echo -e "${USERPASSWORD}\n${USERPASSWORD}" | passwd gaswirth
	usermod -aG sudo gaswirth
	usermod -aG docker gaswirth
	
	adduser foy --disabled-password --gecos ""
	useradd foy
	echo foy:"$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 12 | head -n 1)" | chpasswd
	usermod -aG sudo foy
	
	# Install user pubkeys
	# Generate SSH keys for gaswirth
	mkdir {"${USERHOME}"/.ssh,/home/foy/.ssh}
	touch {"${USERHOME}"/.ssh/authorized_keys,/home/foy/.ssh/authorized_keys}
	chmod 700 "${USERHOME}"/.ssh /home/foy/.ssh
	chmod 600 "${USERHOME}"/.ssh/authorized_keys /home/foy/.ssh/authorized_keys
	chown -R gaswirth:gaswirth "${USERHOME}"/.ssh
	chown -R foy:foy /home/foy/.ssh
	sudo -u gaswirth ssh-keygen -f "${USERHOME}"/.ssh/id_rsa -N ''
	
	#gaswirth
	echo "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC79KWiV0WjBJV8c6AgJnonh12jlVr//3e23of+ADCfgNMasIB8UT9H+xM1zeBh8GmzsrrI4FfiGhhvawa6gyFgbJsSReKWJbsoqFYzUYTDulECsO/iTO438lYIdu4Jsobm+1UsNOX6p3u2zXCrfj1ItLUSGT/dFwTizZIXmktrrg8icW3uFcPieVUqC1qVGsznIgYPDUhPIDLeEELzU87fOfy49YuTZ/M10a4Y8zIv9klzno27RZm90OTA4eqZ1VA+7soWo3TREzhY3X/ZQHC2kdhaseAgUdPfm1hxFg7Cc+Czs6+lAwcA1WhPMAdBKteq5ovbAvphOpQIuVVPkQ+1 gaswirth@Frankengassy.local" >> "${USERHOME}"/.ssh/authorized_keys
	echo "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDbTWzq9yXe8A52N/HzINynxX+miY1zLoh2yTKXxzaJ/OdZGcpMFXWTdy8X+RHtOBIzrOD8oNeQGnEZVzKOYnJQBM1UhUztuJkjn2BM5KCh4LhKOhdn6XjrF8WfKN3P/rcjG0E9IREMKDvtQvdFIqaC2FNkKnVDtan5l3ga1493pckImDO1+E+qwfc3n/XsXj9kHXJ4di9CQ7Y8FI/ODvRq2m+/cZea9RZqHSPYjzhoH2/ol9w5ihLYb9L6sEEaGHn/Xr03bS5paAGV6QG4l2+4UuefLfrgUv4oYx1VVHwejrg26ickU9tuOFCvrOq4eQq4VTCkmEzYtFf/TdhCg33/ gaswirth@Gassybook.local" >> "${USERHOME}"/.ssh/authorized_keys
	
	#foy
	echo "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDTvprX8q2H13YwUtbtaIiBk6MT8is8cb4IJJitZQ3DrQ4IpmLulepxKFPdAqzUE2wxCfU8xmXzC2uIq/VGp02dbVOzT2bHyi9XAJTGX4s7hsVyACPXeSHW30dpdHYrLPbEBLx9TY7ODg/sZ/wLb7OAACglLHlxn7/KkRfWyS2XpCWjCzpLK2koC2NpvAFqyue18cBZ37Jm/fIArPiiYxV3JCzAfkStAf14iv4UjRZ0UyJqN2XCYML+Lplo2ltvSffRYTuFxrzszJNkfLuKVx5Gagx7V4P/+GYKpBLAmHpIKTQjEoIqxcA7kNfGOBIAWK21z9ZzlRQGnhO6kqXOPhur foy@Ryan-Foys-Macbook-Pro-2.local" > /home/foy/.ssh/authorized_keys
	echo "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDnr84P+XxFziw1jz+UrJjxIp+1ORttNkJxUtmnsBIhyMJkub7OZwCfHsZzjp1rIsTx8lP0TPIR7yl77QZ0e/O9v6Jtc/De2UkI0vaoahjSmt6MEfezVuz+V0zh0VLBZ2GKzBEU2sNW8KqkVvgyeIASDLFMd57jJDk0UxPsTaShIbYDvzPrXId44z9J6r3BrmzFVFrt3CmF1LBaxNasyOXN46MURzQ/EPWAO8r99yvHrsNGmOGrC5HFdS5FXP2fgFttj9laERieQ4UAj5jSGyl7+mEtLaPP2tGDpHTsRCjMHM6O9JV62d8kuf9MPGnKuDQM+4Ifo3zlUv/9hCvFT9Y1 foy@Ryan-Foys-iMac.local" >> /home/foy/.ssh/authorized_keys
	
	# Kill SSH root login
	sshDisableRoot
}


function rhd_user_scripts {
	# Create ~/scripts directory
	if [ ! -d "${USERHOME}"/scripts ]; then
		mkdir "${USERHOME}"/scripts
	fi
	
	# Post setup operations
	cd /home/gaswirth || exit
	wget https://raw.githubusercontent.com/gaswirth/rhdwp-scripts/docker-host/runme.sh
	chmod +x runme.sh
}


function rhd_cron_setup {
	## Backups
	pip install --upgrade b2
	
	# Install Restic (backups)
	cd /tmp || exit
	wget https://github.com/restic/restic/releases/download/v0.9.0/restic_0.9.0_linux_amd64.bz2
	bunzip2 restic_0.9.0_linux_amd64.bz2
	mv restic_0.9.0_linux_amd64 /usr/local/bin/restic
	chmod 700 /usr/local/bin/restic
	chown gaswirth:gaswirth /usr/local/bin/restic
	
	# CRON
	# root
	cat > /var/spool/cron/crontabs/root <<- EOF
		0 */6 * * * bash "${USERHOME}"/scripts/restic-backup.sh >/dev/null 2>&1
	EOF
	
	# gaswirth
	cat > /var/spool/cron/crontabs/gaswirth <<- EOF
		0 0 * * * bash /srv/scripts/rhd_wp_update
	EOF
	
	rhd_user_scripts
}

function rhd_goodstuff {
	# apt cleanup
	apt autoclean -y
	apt autoremove -y
	
	# iTerm Shell Integration (macOS)
	curl -L https://iterm2.com/shell_integration/install_shell_integration_and_utilities.sh | bash
	
	# Enable the colorful root bash prompt
	sed -i -e 's/^#PS1=/PS1=/' /root/.bashrc # enable the colorful root bash prompt
	
	# Ensure proper permissions, just in case I fucked something up...
	chown gaswirth:gaswirth "${USERHOME}"
	chown foy:foy /home/foy
	
	# Nick's Aliases
	cat > "${USERHOME}"/.bash_aliases <<- EOF				
		alias update='sudo apt update && sudo apt upgrade --show-upgraded --assume-yes'
		alias rhd='cd /srv/www/'
		alias wp='docker-compose run --rm wp-cli_${PWD##*/}'
	EOF
	
	# Create webserver environment and helper scripts
	mkdir {/srv/www/,/srv/scripts}
	chown gaswirth:gaswirth {/srv/www/,/srv/scripts}
	git clone git@github.com:gaswirth/rhdwp-docker-nginx-proxy /srv/www/nginx-proxy
	git clone git@github.com:gaswirth/rhdwp-docker-host-scripts /srv/scripts
	git clone git@github.com:evertramos/docker-portainer-letsencrypt.git /srv/www/portainer
	sed -i -E \
		-e "s|PORTAINER_DATA_PATH=(.*)$|PORTAINER_DATA_PATH=/srv/www/portainer/data|" \
		-e "s|ADMIN_PASSWORD=(.*)$|ADMIN_PASSWORD=password|" \
		-e "s|DOMAINS=(.*)$|DOMAINS=$(hostname).portainer.roundhouse-designs.com|" \
		-e "s|MAIN_DOMAIN=(.*)$|MAIN_DOMAIN=$(hostname).portainer.roundhouse-designs.com\nVIRTUAL_HOST="'"$MAIN_DOMAIN"'"|" \
		-e "s|LETSENCRYPT_EMAIL=(.*)$|LETSENCRYPT_EMAIL=admin@roundhouse-designs.com|" \
		-e "s|PORTAINER_SSL_PATH=(.*)$|PORTAINER_SSL_PATH=/srv/www/nginx-proxy/certs|" \
		-e "s|NETWORK=(.*)$|NETWORK=nginx-proxy|" .env

	chown gaswirth:gaswirth .bash_aliases
	chown gaswirth:gaswirth scripts
	
	echo "********** HUZZAH!!! **********"
}

##################
# Start
##################
IP=$(ip a s | grep -A8 -m1 MULTICAST | grep -m1 inet | cut -d' ' -f6 | cut -d'/' -f1)
IPV6=$(ip a s | grep -A8 -m1 MULTICAST | grep -m1 inet6 | cut -d' ' -f6 | cut -d'/' -f1)
FQDN="${HOSTNAME}.roundhouse-designs.com"

# System setup
hostnamectl set-hostname "${HOSTNAME}"
echo "${IP}	${FQDN}	${HOSTNAME}" >> /etc/hosts
echo "${IPV6} ${FQDN} ${HOSTNAME}" >> /etc/hosts

# Roll it out
rhd_initial_setup
rhd_users_setup
rhd_cron_setup
rhd_goodstuff
